#include "Testingheader.h"
#include "stdio.h"
#include "Header.h"

int tests_run = 0;
int array[5];
int z;
int e;
/*
char* test_create()
{

	Queue* q1 = Queue_create(&array, 6);
	mu_assert("Should return a pointer to an empty queue", q1 != NULL);

	return NULL;
}
char* test_dequeue()
{
	

	Queue* q1 = Queue_create(&array, 6);
	mu_assert("Should return true or false wether it worked", Queue_dequeue(&array,&z) == false);

	return NULL;

}
*/
char* test_enqueue()
{
	Queue* q1 = Queue_create(&array[0], 6);
	mu_assert("Should return true if the code works properly", Queue_enqueue(&array[1], 2) == false);

	return NULL;
}
/*
char* test_isFULL()
{
	mu_assert("Should return true if the queue is full", Queue_isFull() == true);
	return NULL;
}
char* test_isempty()
{
	mu_assert("If everything works out, it should return true", Queue_isEmpty(5) == true);

	return NULL;
}
char* test_capacity()
{
	mu_assert("should return the max capacity of the queue", Queue_capacity(4) == 4);
	return NULL;
}

char* test_length()
{
	mu_assert("should return length of currently used queue", Queue_length(4) == 5);
	return NULL;
}
*/
char* all_tests()
{
	//mu_run_test(test_create);
	mu_run_test(test_enqueue);
}

int main() {
	char* message = all_tests();
	printf("%d Tests currently running...\n", tests_run);
	if (message == NULL)
	{
		printf("All Tests have passed!\n");
	}
	else
	{
		printf("ERROR: %s!\n", message);
		return -1;
	}
	return 0;
}
